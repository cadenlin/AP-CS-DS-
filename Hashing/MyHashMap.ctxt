#BlueJ class context
comment0.target=MyHashMap
comment0.text=\n\ MyHashMap\ acts\ like\ a\ map.\n\ \n\ @author\ \ Caden\ Lin\ \n\ @version\ Feb\ 9\ 2021\ \n\ @param\ <K>\ \ \ the\ type\ of\ key\n\ @param\ <V>\ \ \ the\ type\ of\ value\n
comment1.params=
comment1.target=MyHashMap()
comment1.text=\n\ a\ constructor\ for\ MyHashMap\ objects\ \n
comment10.params=m
comment10.target=void\ putAll(java.util.Map)
comment10.text=\ Copies\ all\ the\ keys\ from\ the\ given\ map\ to\ this\ map\n\ @param\ m\ the\ map\ to\ copy\ keys\ from\ \n\ @postcondition\ all\ the\ keys\ from\ the\ given\ map\ are\ copied\ to\ this\ map\ \n\ \n
comment11.params=
comment11.target=void\ clear()
comment11.text=\n\ \ Clears\ the\ map\ \n\ \ @postcondition\ all\ the\ elements\ in\ the\ map\ are\ null\ \n
comment12.params=
comment12.target=java.util.Set\ keySet()
comment12.text=\ Creates\ a\ set\ of\ all\ the\ keys\ in\ the\ map\ \n\ @return\ a\ set\ with\ all\ the\ keys\ in\ the\ map\ \n\ \n
comment13.params=
comment13.target=java.util.Collection\ values()
comment13.text=\ Creates\ a\ collection\ of\ all\ the\ values\ in\ the\ map\ \n\ @return\ an\ ArrayList\ containing\ each\ value\ in\ the\ map\ \n\ \n
comment14.params=
comment14.target=java.util.Set\ entrySet()
comment14.text=\ Creates\ a\ set\ view\ of\ the\ mappings\ in\ the\ map\ \n\ @return\ a\ set\ with\ all\ the\ mapEntrys\ of\ the\ map\ \n\ \n
comment15.params=
comment15.target=java.lang.String\ toString()
comment15.text=\n\ returns\ the\ contents\ of\ the\ hashmap\ as\ a\ string\n\ @return\ a\ string\ that\ represents\ the\ contents\ of\ this\ hashmap\n
comment2.params=obj
comment2.target=int\ toBucketIndex(java.lang.Object)
comment2.text=\ Determines\ the\ bucket\ index\ of\ an\ object\n\ @param\ obj\ the\ object\ to\ find\ the\ bucket\ index\ for\n\ @return\ the\ correct\ bucket\ index\ for\ that\ object\n
comment3.params=
comment3.target=int\ size()
comment3.text=\ Determines\ the\ size\ of\ the\ map\ \ \n\ @return\ the\ number\ of\ elements\ in\ the\ map\ \n\ \n
comment4.params=
comment4.target=boolean\ isEmpty()
comment4.text=\ Determines\ whether\ the\ map\ is\ empty\ or\ not\ \n\ @return\ true\ if\ the\ map\ is\ empty,\ false\ otherwise\ \n\ \n
comment5.params=key
comment5.target=boolean\ containsKey(java.lang.Object)
comment5.text=\ Determines\ if\ the\ map\ contains\ a\ certain\ key\ \n\ @param\ key\ the\ key\ to\ search\ for\ in\ the\ map\ \n\ @return\ true\ if\ the\ map\ contains\ the\ key,\ false\ otherwise\ \n\ \n
comment6.params=value
comment6.target=boolean\ containsValue(java.lang.Object)
comment6.text=\ Determines\ if\ the\ map\ contains\ a\ certain\ value\ \n\ @param\ value\ the\ value\ to\ search\ for\ in\ the\ map\ \n\ @return\ true\ if\ the\ map\ contains\ the\ value,\ false\ otherwise\ \n
comment7.params=key
comment7.target=java.lang.Object\ get(java.lang.Object)
comment7.text=\ Determines\ the\ value\ associated\ with\ a\ certain\ key\ \n\ @param\ key\ the\ key\ to\ get\ the\ value\ associated\ with\ \n\ @return\ the\ value\ associated\ with\ the\ key,\ \n\ \ \ \ \ \ \ \ \ \ null\ if\ the\ map\ does\ not\ contain\ the\ key\ \n\ \n
comment8.params=key\ value
comment8.target=java.lang.Object\ put(java.lang.Object,\ java.lang.Object)
comment8.text=\ Adds\ a\ new\ key\ and\ value\ pair\ to\ the\ map\ or\ \n\ replaces\ the\ value\ associated\ with\ an\ existing\ key\n\ @param\ key\ the\ key\ to\ add\ or\ replace\ the\ value\ associated\ with\ \n\ @param\ value\ the\ new\ value\ associated\ with\ key\ \n\ @postcondition\ a\ MapEntry\ with\ key\ and\ value\ are\ added\ to\ the\ map\ if\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ there\ was\ not\ an\ entry\ with\ key\ beforehand\ and\ size\ is\ incremented\ by\ 1\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ value\ of\ the\ MapEntry\ with\ key\ is\ replaced\ with\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ value\ if\ there\ was\ a\ MapEntry\ with\ key\ beforehand\ \n\ @return\ the\ old\ value\ associated\ with\ key\ if\ the\ map\ already\ contained\ key,\ \n\ \ \ \ \ \ \ \ \ \ null\ otherwise\ \n\ \n
comment9.params=key
comment9.target=java.lang.Object\ remove(java.lang.Object)
comment9.text=\ Removes\ an\ element\ from\ the\ map\ \n\ @param\ key\ the\ key\ to\ remove\ from\ the\ map\ \n\ @postcondition\ if\ the\ map\ contains\ the\ key,\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ key\ is\ removed\ from\ the\ map\ and\ the\ size\ is\ decremented\ by\ 1\ \n\ @return\ the\ value\ associated\ with\ the\ map\ if\ the\ map\ contained\ the\ key,\ \n\ \ \ \ \ \ \ \ \ \ null\ otherwise\ \n\ \n
numComments=16
